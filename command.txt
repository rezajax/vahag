for commit


#list name ports
less /etc/services



netstat -na | grep ESTAB
https://www.explainshell.com/explain?cmd=netstat+-na+%7C+grep+ESTAB

he simplest solution is:

rm -f .ssh/known_hosts
ssh will recreate the file again, but you lose key checking for other hosts!

Or, you can use:

ssh-keygen -R "hostname"
Or the ssh "man-in-the-middle" message should indicate which line of the known_hosts file has the offending fingerprint. Edit the file, jump to that line and delete it.


ip netns


ssh-keygen -R 192.168.0.111


#--------------------------------------------------ssh
#change net metric
sudo apt-get install ifmetric
ifmetric 



iptables -L -n -t nat




#-----------------------------------------------------netns - network name space

ip netns show wan1

ip -n physical link
ip netns exec wan1 ip link


 switches ip to the specified network namespace NETNS.  Actually it just simplifies executing of:

              ip netns exec NETNS ip [ OPTIONS ] OBJECT { COMMAND | help }

              to

              ip -n[etns] NETNS [ OPTIONS ] OBJECT { COMMAND | help }





PostUp = ip netns add physical
PostUp = ip link set usb0 netns physical
PostUp = ip -n physical link add wg0 type wireguard
PostUp = ip -n physical link set wg0 netns 1
#PostUp = ip netns exec physical dhcpcd wlan0 لازم نیست چون من وای فای رو نبرم تو نیم اسپیس

PostUp = wg setconf wg0 /etc/wireguard/wg0.conf
PostUp = ip addr add 10.103.150.1/24 dev wg0 # هر چند تا بخواهیم میشه اد کرد!  ip addr add 10.103.150.1/32 dev wg0
PostUp = ip link set wg0 up
PostUp = ip route add default dev wg0




ip netns add physical
ip link set usb0 netns physical
ip -n physical link add wg0 type wireguard
ip -n physical link set wg0 netns 1
ip netns exec physical dhcpcd wlan0




ip addr 
ip a
ip address


ip link 
ip l

ip route 
ip r


#set loopback up
ip l set lo up  
ip l set up lo
ip link set up lo 
ip link set lo up 


ip a flush dev enx06365a98b2b8



#Displaying all Linux IP address
sudo ip -br -c addr show
sudo ip -br -c link show


ip netns exec ali ip link
ip -n ali link

ip netns exec ali ip route
ip -n ali route

ip netns exec ali route
in main is: route

ip netns exec ali ping -I usb0 1.1.1.1






echo 1 > /proc/sys/net/ipv4/ip_forward




ip addr add 192.168.31.157/24 brd + dev enxde65760a7664 


ip netns add reza && ip link set enxd6607169deb5 netns reza && ip netns exec reza /bin/bash




ip l add wg0 type wireguard
ip link set wg0 netns 1


wg setconf wg0 /etc/wireguard/wg0.conf
    ip a add 10.103.150.1/24 dev wg0
ip l set wg0 up 
ip lr add default dev wg0


#--------------------------------------------------compare net-tools vs ip 
netns --> ss

https://www.cyberciti.biz/faq/linux-ip-command-examples-usage-syntax/#:~:text=The%20ip%20command%20is%20used,command%20on%20modern%20Linux%20distributions.




#----------------------------------------------------------- iptables
https://unix.stackexchange.com/questions/205867/viewing-all-iptables-rules


When using the -L, --list option to list the current firewall rules, you also need to specify the appropriate Netfilter table (one of filter, nat, mangle, raw or security). So, if you’ve added a rule for the nat table, you should explicitly specify this table using the -t, --table option:

iptables --table nat --list

Or using the options short form:

iptables -t nat -L

If you don’t specify a specific table, the filter table is used as the default.




iptables --table nat --list
iptables -t nat -L



ufw reset
Or you can do it in single command –
iptables -F


https://www.cyberciti.biz/faq/how-to-list-all-iptables-rules-in-linux/





#-----------------------------------------veth



ip netns add ns1
ip l set usb1 netns ns1

    #create terminal for control ns
    ip netns exec ns1 bash 

ip l add veth1 type veth peer veth2
ip link set veth2 netns ns1
ip addr add 10.10.1.1/24 dev veth1
ip link set veth1 up

    #in ns
    ip addr add 10.10.1.2/24 dev veth2
    ip link set veth2 up
    ip route add default via 10.10.1.1


iptables -t nat -A POSTROUTING -s 10.10.1.0/24 -o wlp2s0 -j MASQUERADE 
iptables -A FORWARD -o wlp2s0 -i veth1 -j ACCEPT
iptables -A FORWARD -i wlp2s0 -o veth1 -j ACCEPT



#--way 1 wg out ns (netns 1)

    ip l add wg0 type wireguard
    ip link set wg0 netns 1


wg setconf wg0 /etc/wireguard/wg0.conf
ip a add 10.103.150.1/24 dev wg0
ip l set wg0 up 
ip r add default dev wg0

#--way 2 wg in ns

    ip l add wg0 type wireguard

    wg setconf wg0 /etc/wireguard/wg0.conf
    ip a add 10.103.150.1/24 dev wg0
    ip l set wg0 up 
    ip r add default dev wg0

    iptables -t nat -A POSTROUTING -s 10.103.150.1/24 -o veth2 -j MASQUERADE 
    iptables -A FORWARD -o wlp2s0 -i veth2 -j ACCEPT
    iptables -A FORWARD -i wlp2s0 -o veth2 -j ACCEPT




#non
mkdir -p /etc/netns/rover && echo &quotnameserver 1.1.1.1&quot > /etc/netns/rover/resolv.conf
mkdir -p /etc/netns/vpn/ && echo "nameserver 10.2.0.1" > /etc/netns/vpn/resolv.conf
curl https://ifconfig.me; echo


#------------------------------ifmetric
https://unix.stackexchange.com/questions/245208/modifying-existing-route-entry-in-linux




#---------------------------------- wg without ns

iptables -t nat -A POSTROUTING -s 10.103.150.0/24 -o enx020a6734386a -j MASQUERADE 
iptables -A FORWARD -o wg0 -i enx8ef7deb53ac9 -j ACCEPT
iptables -A FORWARD -i wg0 -o enx8ef7deb53ac9 -j ACCEPT




#------------------------------------------------fwmark
ip r show table all
ip r show default
ip route get 10.103.150.2
ip route get 10.103.150.1

ip r show table 2468

https://serverfault.com/questions/1095450/sent-wg-trafic-to-eth1
ip route add default dev wg0 table 123
ip rule add iif eth1 lookup 123

https://serverfault.com/questions/1147215/prevent-routing-loop-with-fwmark-in-wireguard


traceroute -n --fwmark=1234 10.103.150.2


ip route get 10.103.150.2
ip route get from 10.103.150.2 iif wg0 to 192.168.0.117


#--------------------------------------------- routing
https://ubuntu.com/server/docs/wireguard-vpn-peer2site-router
watch wg show


ip route add 20.103.150.2/32 dev enx8ef7deb53ac9
ip route add 20.103.150.1/32 dev enx8ef7deb53ac9



iptables -A FORWARD -i enx020a6734386a -o wg1 -j ACCEPT
iptables -A FORWARD -i wg1 -o enx020a6734386a -j ACCEPT

ip r del default
