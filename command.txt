for commit


#list name ports
less /etc/services



netstat -na | grep ESTAB
https://www.explainshell.com/explain?cmd=netstat+-na+%7C+grep+ESTAB

he simplest solution is:

rm -f .ssh/known_hosts
ssh will recreate the file again, but you lose key checking for other hosts!

Or, you can use:

ssh-keygen -R "hostname"
Or the ssh "man-in-the-middle" message should indicate which line of the known_hosts file has the offending fingerprint. Edit the file, jump to that line and delete it.


ip netns


ssh-keygen -R 192.168.0.111


#--------------------------------------------------ssh
#change net metric
sudo apt-get install ifmetric
ifmetric 



iptables -L -n -t nat




#-----------------------------------------------------netns - network name space

ip netns show wan1

ip -n physical link
ip netns exec wan1 ip link


 switches ip to the specified network namespace NETNS.  Actually it just simplifies executing of:

              ip netns exec NETNS ip [ OPTIONS ] OBJECT { COMMAND | help }

              to

              ip -n[etns] NETNS [ OPTIONS ] OBJECT { COMMAND | help }





PostUp = ip netns add physical
PostUp = ip link set usb0 netns physical
PostUp = ip -n physical link add wg0 type wireguard
PostUp = ip -n physical link set wg0 netns 1
#PostUp = ip netns exec physical dhcpcd wlan0 لازم نیست چون من وای فای رو نبرم تو نیم اسپیس

PostUp = wg setconf wg0 /etc/wireguard/wg0.conf
PostUp = ip addr add 10.103.150.1/24 dev wg0 # هر چند تا بخواهیم میشه اد کرد!  ip addr add 10.103.150.1/32 dev wg0
PostUp = ip link set wg0 up
PostUp = ip route add default dev wg0




ip netns add physical
ip link set usb0 netns physical
ip -n physical link add wg0 type wireguard
ip -n physical link set wg0 netns 1
ip netns exec physical dhcpcd wlan0




ip addr 
ip a
ip address


ip link 
ip l

ip route 
ip r


#set loopback up
ip l set lo up  
ip l set up lo
ip link set up lo 
ip link set lo up 


ip a flush dev enx06365a98b2b8



#Displaying all Linux IP address
sudo ip -br -c addr show
sudo ip -br -c link show


ip netns exec ali ip link
ip -n ali link

ip netns exec ali ip route
ip -n ali route

ip netns exec ali route
in main is: route

ip netns exec ali ping -I usb0 1.1.1.1






echo 1 > /proc/sys/net/ipv4/ip_forward




ip addr add 192.168.31.157/24 brd + dev enxde65760a7664 


ip netns add reza && ip link set enxd6607169deb5 netns reza && ip netns exec reza /bin/bash




ip l add wg0 type wireguard
ip link set wg0 netns 1


wg setconf wg0 /etc/wireguard/wg0.conf
    ip a add 10.103.150.1/24 dev wg0
ip l set wg0 up 
ip lr add default dev wg0


#--------------------------------------------------compare net-tools vs ip 
netns --> ss

https://www.cyberciti.biz/faq/linux-ip-command-examples-usage-syntax/#:~:text=The%20ip%20command%20is%20used,command%20on%20modern%20Linux%20distributions.




#----------------------------------------------------------- iptables
https://unix.stackexchange.com/questions/205867/viewing-all-iptables-rules


When using the -L, --list option to list the current firewall rules, you also need to specify the appropriate Netfilter table (one of filter, nat, mangle, raw or security). So, if you’ve added a rule for the nat table, you should explicitly specify this table using the -t, --table option:

iptables --table nat --list

Or using the options short form:

iptables -t nat -L

If you don’t specify a specific table, the filter table is used as the default.




iptables --table nat --list
iptables -t nat -L



ufw reset
Or you can do it in single command –
iptables -F


https://www.cyberciti.biz/faq/how-to-list-all-iptables-rules-in-linux/





#-----------------------------------------veth



ip netns add ns1
ip l set usb1 netns ns1

    #create terminal for control ns
    ip netns exec ns1 bash 

ip l add veth1 type veth peer veth2
ip link set veth2 netns ns1
ip addr add 10.10.1.1/24 dev veth1
ip link set veth1 up

    #in ns
    ip addr add 10.10.1.2/24 dev veth2
    ip link set veth2 up
    ip route add default via 10.10.1.1


iptables -t nat -A POSTROUTING -s 10.10.1.0/24 -o wlp2s0 -j MASQUERADE 
iptables -A FORWARD -o wlp2s0 -i veth1 -j ACCEPT
iptables -A FORWARD -i wlp2s0 -o veth1 -j ACCEPT



#--way 1 wg out ns (netns 1)

    ip l add wg0 type wireguard
    ip link set wg0 netns 1


wg setconf wg0 /etc/wireguard/wg0.conf
ip a add 10.103.150.1/24 dev wg0
ip l set wg0 up 
ip r add default dev wg0

#--way 2 wg in ns

    ip l add wg0 type wireguard

    wg setconf wg0 /etc/wireguard/wg0.conf
    ip a add 10.103.150.1/24 dev wg0
    ip l set wg0 up 
    ip r add default dev wg0

    iptables -t nat -A POSTROUTING -s 10.103.150.1/24 -o veth2 -j MASQUERADE 
    iptables -A FORWARD -o wlp2s0 -i veth2 -j ACCEPT
    iptables -A FORWARD -i wlp2s0 -o veth2 -j ACCEPT




#non
mkdir -p /etc/netns/rover && echo &quotnameserver 1.1.1.1&quot > /etc/netns/rover/resolv.conf
mkdir -p /etc/netns/vpn/ && echo "nameserver 10.2.0.1" > /etc/netns/vpn/resolv.conf
curl https://ifconfig.me; echo


#------------------------------ifmetric
https://unix.stackexchange.com/questions/245208/modifying-existing-route-entry-in-linux




#---------------------------------- wg without ns

iptables -t nat -A POSTROUTING -s 10.103.150.0/24 -o enx020a6734386a -j MASQUERADE 
iptables -t nat -A POSTROUTING -s 10.103.150.2/32 -o enx020a6734386a -j MASQUERADE
iptables -A FORWARD -o wg0 -i enx8ef7deb53ac9 -j ACCEPT
iptables -A FORWARD -i wg0 -o enx8ef7deb53ac9 -j ACCEPT




#------------------------------------------------fwmark
ip r show table all
ip r show default
ip route get 10.103.150.2
ip route get 10.103.150.1

ip r show table 2468

https://serverfault.com/questions/1095450/sent-wg-trafic-to-eth1
ip route add default dev wg0 table 123
ip rule add iif eth1 lookup 123

https://serverfault.com/questions/1147215/prevent-routing-loop-with-fwmark-in-wireguard
wg set wg0 fwmark 1234

ip -4 rule add not fwmark 1234 table 2468


traceroute -n --fwmark=1234 10.103.150.2


ip route get 10.103.150.2
ip route get from 10.103.150.2 iif wg0 to 192.168.0.117

https://superuser.com/questions/1700905/wireguard-client-with-two-interfaces-use-one-interface-for-wireguard




#--------------------------------------------- routing
https://ubuntu.com/server/docs/wireguard-vpn-peer2site-router
watch wg show


ip route add 20.103.150.2/32 dev enx8ef7deb53ac9
ip route add 20.103.150.1/32 dev enx8ef7deb53ac9



iptables -A FORWARD -i enx020a6734386a -o wg1 -j ACCEPT
iptables -A FORWARD -i wg1 -o enx020a6734386a -j ACCEPT

ip r del default


https://forum.libreelec.tv/thread/21906-wireguard-changes-the-default-route-although-not-configured/
ip route add 192.168.152.243 via 10.103.150.2


#------------------------------tcpdump
https://medium.com/tangram-visions/what-they-dont-tell-you-about-setting-up-a-wireguard-vpn-46f7bd168478
https://www.cyberciti.biz/faq/how-to-set-up-wireguard-firewall-rules-in-linux/
https://gist.github.com/nealfennimore/92d571db63404e7ddfba660646ceaf0d

sudo tcpdump -nn -i wg0
sudo tcpdump -nn -i eth0 udp and port 51820


# tcpdump -i wlan0 -n host 146.255.36.1
tcpdump -i usb0 -n host 146.255.36.1



#---------------------------------------  turn on forwarding in linux 

cat /proc/sys/net/ipv4/ip_forward
















#-----------------other

root@raspberrypi:/etc/wireguard# ip neigh
4.2.2.4 dev usb1  FAILED
172.217.169.106 dev usb1  FAILED
108.177.119.188 dev usb1  FAILED
54.147.151.107 dev usb1  FAILED
192.168.0.102 dev wlan0 lladdr 80:2b:f9:9a:1a:81 REACHABLE
142.251.141.42 dev usb1  FAILED
52.72.249.25 dev usb1  FAILED
172.217.169.202 dev usb1  FAILED
142.250.187.106 dev usb1  FAILED
54.147.207.245 dev usb1  FAILED
8.8.4.4 dev usb1  FAILED
52.5.72.30 dev usb1  FAILED
142.251.140.42 dev usb1  FAILED
216.58.214.138 dev usb1  FAILED
142.250.184.131 dev usb1  FAILED
52.54.91.138 dev usb1  FAILED
54.156.234.122 dev usb1  FAILED
9.9.9.9 dev usb1  FAILED
192.168.230.66 dev usb1  FAILED
172.217.169.138 dev usb1  FAILED
142.250.184.138 dev usb1  FAILED
9.9.9.9 dev usb0  FAILED
172.217.17.106 dev usb1  FAILED
52.45.242.39 dev usb1  FAILED
149.112.112.112 dev usb0  FAILED
216.58.212.10 dev usb1  FAILED
216.58.213.106 dev usb1  FAILED
52.7.47.209 dev usb1  FAILED
172.217.20.67 dev usb1  FAILED
1.1.1.1 dev usb1  FAILED
142.250.187.138 dev usb1  FAILED
54.174.231.62 dev usb1  FAILED
142.251.140.74 dev usb1  FAILED
52.5.201.218 dev usb1  FAILED
1.1.1.1 dev usb0  FAILED
3.95.44.39 dev usb1  FAILED
192.168.42.129 dev usb1 lladdr e2:10:86:5f:b0:52 REACHABLE
172.217.20.74 dev usb1  FAILED
2.23.160.226 dev usb1  FAILED
54.172.29.197 dev usb1  FAILED
8.8.8.8 dev usb1  FAILED
54.225.208.107 dev usb1  FAILED
54.161.82.91 dev usb1  FAILED
192.168.0.1 dev wlan0 lladdr 0c:80:63:36:f9:7e STALE
192.168.230.66 dev usb0 lladdr 32:17:55:36:51:8d STALE
3.89.52.39 dev usb1  FAILED
172.217.17.138 dev usb1  FAILED
142.251.140.10 dev usb1  FAILED
52.73.97.138 dev usb1  FAILED
216.58.212.42 dev usb1  FAILED
142.250.187.170 dev usb1  FAILED
192.168.0.119 dev wlan0 lladdr 3a:01:5a:c1:31:59 REACHABLE
172.217.17.234 dev usb1  FAILED
fe80::29cf:a165:a6e2:982c dev usb0 lladdr a2:14:10:aa:1d:60 STALE
fe80::d823:1b6b:d595:c0ce dev wlan0 lladdr b8:27:eb:21:fd:15 STALE
fe80::9236:6551:68d7:86ed dev usb1 lladdr 02:0a:67:34:38:6a STALE
fe80::b435:83ff:feca:fd39 dev wlan0 lladdr b6:35:83:ca:fd:39 STALE
fe80::3801:5aff:fec1:3159 dev wlan0 lladdr 3a:01:5a:c1:31:59 STALE

ip neigh flush all
#after that

root@raspberrypi:/etc/wireguard# ip neigh
192.168.0.102 dev wlan0 lladdr 80:2b:f9:9a:1a:81 REACHABLE
192.168.42.129 dev usb1 lladdr e2:10:86:5f:b0:52 REACHABLE
192.168.230.66 dev usb0 lladdr 32:17:55:36:51:8d REACHABLE
192.168.0.119 dev wlan0 lladdr 3a:01:5a:c1:31:59 STALE


root@raspberrypi:/etc/wireguard# ip neigh
192.168.0.102 dev wlan0 lladdr 80:2b:f9:9a:1a:81 REACHABLE
192.168.42.129 dev usb1 lladdr e2:10:86:5f:b0:52 STALE
192.168.0.1 dev wlan0 lladdr 0c:80:63:36:f9:7e STALE
192.168.230.66 dev usb0 lladdr 32:17:55:36:51:8d STALE
192.168.0.119 dev wlan0 lladdr 3a:01:5a:c1:31:59 STALE
fe80::3801:5aff:fec1:3159 dev wlan0 lladdr 3a:01:5a:c1:31:59 STALE











https://operavps.com/docs/check-open-ports-in-linux/
ss -tulpn
netstat -tulpn


sudo netstat -anp | grep <port_number>

root@raspberrypi:/home/reza# sudo netstat -anp | grep 22
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      2433/sshd: /usr/sbi
tcp        0      0 192.168.0.111:22        192.168.0.102:54199     ESTABLISHED 1940/sshd: reza [pr
tcp        0      0 192.168.0.111:22        80.86.229.48:50026      SYN_RECV    -
tcp        0      0 192.168.0.111:22        192.168.0.102:57875     ESTABLISHED 2394/sshd: reza [pr
tcp6       0      0 :::22                   :::*                    LISTEN      2433/sshd: /usr/sbi
udp        0      0 0.0.0.0:68              0.0.0.0:*                           522/dhcpcd
raw6       0      0 :::58                   :::*                    7           522/dhcpcd
unix  3      [ ]         STREAM     CONNECTED     1022     731/systemd
unix  3      [ ]         STREAM     CONNECTED     16938    522/dhcpcd           /run/dhcpcd.unpriv.sock
unix  2      [ ]         DGRAM      CONNECTED     12662    522/dhcpcd
unix  3      [ ]         STREAM     CONNECTED     16939    522/dhcpcd           /run/dhcpcd.unpriv.sock
unix  3      [ ]         STREAM     CONNECTED     522      339/systemd-timesyn
unix  2      [ ACC ]     STREAM     LISTENING     12655    522/dhcpcd           /run/dhcpcd.sock
unix  2      [ ACC ]     STREAM     LISTENING     12656    522/dhcpcd           /run/dhcpcd.unpriv.sock
unix  3      [ ]         STREAM     CONNECTED     723      422/polkitd
unix  2      [ ]         DGRAM      CONNECTED     22520    2824/sudo
unix  3      [ ]         STREAM     CONNECTED     13222    401/dbus-daemon      /run/dbus/system_bus_socket
unix  2      [ ACC ]     STREAM     LISTENING     12277    999/ssh-agent        /tmp/ssh-Pbe5iuqNcKbB/agent.988
unix  3      [ ]         STREAM     CONNECTED     12216    969/gvfsd-fuse
unix  3      [ ]         STREAM     CONNECTED     12201    759/dbus-daemon      /run/user/1000/bus
unix  3      [ ]         STREAM     CONNECTED     11622    401/dbus-daemon
unix  2      [ ]         DGRAM      CONNECTED     15062    422/polkitd

یک اتصال در حالت LISTEN بر روی IPv4.
دو اتصال در حالت ESTABLISHED که نشان‌دهنده اتصالات SSH موجود به سرور از داخل شبکه لوکال به سرور (192.168.0.111) است.
یک اتصال در حالت SYN_RECV که ممکن است نشان‌دهنده تلاش برقراری اتصال از WAN باشد.